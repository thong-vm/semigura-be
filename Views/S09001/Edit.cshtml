@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@using semigura.Commons;
@model semigura.Models.S09001ViewModel
@{
    ViewBag.Title = Localizer["M_S09001"];
}

<link href="@Url.Content(string.Format("~/Content/dev/css/{0}", Utils.GetMinifiedFileName("S09001.css")))" rel="stylesheet" type="text/css">

<!-- Page Heading -->
<div class="d-sm-flex align-items-center justify-content-between mb-4 home_header">
    <h1 class="h3 mb-0 text-gray-800"><i class="bi bi-display" style="margin-right: 3.5px;"></i>@Localizer["M_S09001"]</h1>
</div>

<!-- Content Row -->
<div class="container">
    <div class="row" style="margin-left: 20px">
        <button type="button" class="btn btn-warning" onclick="Back()">
            <i class="bi bi-arrow-90deg-left"></i> @Localizer["backbtn"]
        </button>
    </div>
    <div class="row addForm">
        <form id="inputForm" role="form" class="inputForm">
            <div class="row">
                <div class="col-md-12 col-sm-12">
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-10 col-sm-12">
                    <div class="form-group">
                        <label class="form_label">@Localizer["material"]（<span class="required-label">&#42;</span>）：</label>
                        <div class="wapper-input">
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-10 col-sm-12">
                    <div class="form-group">
                        <label class="form_label">@Localizer["note"]：</label>
                        <div class="wapper-input">
                            @Html.TextAreaFor(model => model.Note, new { @class = "form-control", @rows = "5" })
                            @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div id="temperature-data">
                <div class="titlePC row">
                    <div class="col-md-3 col-sm-3">
                        <div class="form-group">
                            <label>@Localizer["type"]：</label>
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-3">
                        <div class="form-group">
                            <label>@Localizer["temp_min"]：</label>
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-3">
                        <div class="form-group">
                            <label>@Localizer["temp_max"]：</label>
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-3">
                    </div>
                </div>
                @if (Model.MaterialStandValList != null)
                {
                    for (var i = 0; i < Model.MaterialStandValList.Count; i++)
                    {
                        <div class="row material-stand-row">
                            <div class="col-md-3 col-sm-12">
                                <div class="row addTitle titleType">
                                    <div class="form-group">
                                        <div class="titleMobile" style="display:none">@Localizer["type"] :</div>
                                        <div class="wapper-input">
                                            @Html.DropDownListFor(
                                                model => Model.MaterialStandValList[i].Type,
                                                 new SelectListItem[]{
                                                     new SelectListItem() {Value=string.Empty, Text=string.Empty},
                                    new SelectListItem() {Value="1", Text=@Localizer["type_tank"].Value},
                                    new SelectListItem() {Value="2", Text=@Localizer["type_seigiku"].Value},
                                                 }, new { @class = "select-classic form-control" })
                                        </div>
                                    </div>
                                </div>

                                @Html.ValidationMessageFor(model => Model.MaterialStandValList[i].Type, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => Model.MaterialStandValList[i].Type, new { @class = "edit-cache-type" })
                            </div>
                            <div class="col-md-3 col-sm-12">
                                <div class="row addTitle">
                                    <div class="form-group">
                                        <div class="titleMobile" style="display:none">@Localizer["temp_min"] :</div>
                                        <div class="input-group">
                                            @Html.TextBoxFor(model => Model.MaterialStandValList[i].TempMin, new { @class = "inputnumber form-control", @placeholder = "0", @style = "text-align:right", @aria_describedby = "basic-addon2" })
                                            <span class="input-group-text" id="basic-addon2" style="background-color: transparent;">°C</span>
                                        </div>
                                    </div>
                                </div>

                                @Html.ValidationMessageFor(model => Model.MaterialStandValList[i].TempMin, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-3 col-sm-12">
                                <div class="row addTitle">
                                    <div class="form-group">
                                        <div class="titleMobile" style="display:none">@Localizer["temp_max"]:</div>
                                        <div class="input-group">
                                            @Html.TextBoxFor(model => Model.MaterialStandValList[i].TempMax, new { @class = "inputnumber form-control", @placeholder = "0", @style = "text-align:right", @aria_describedby = "basic-addon2" })
                                            <span class="input-group-text" id="basic-addon2" style="background-color: transparent;">°C</span>
                                        </div>
                                    </div>
                                </div>

                                @Html.ValidationMessageFor(model => Model.MaterialStandValList[i].TempMax, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-3 col-sm-12">
                                <div class="form-group btndelete">
                                    <div class="reggisterButton">
                                        <button type="button" class="btn btn-danger btn-sub" onclick="RemoveRow(this)"><i class="bi bi-trash"></i></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>

            <div class="row">
                <div class="col-md-3 col-sm-3">
                    <div class="form-group">
                        <button type="button" class="btn btn-success btn-sub" onclick="AddRow()"><i class="bi bi-plus-circle"></i></button>
                    </div>
                </div>
            </div>

            @Html.HiddenFor(model => model.Id)

            <div class="row registerBtn">
                <div class="col-md-3 col-sm-12 reggisterButton">
                    <button type="button" class="btn btn-success" onclick="Save()">
                        <i class="fas fa-check-circle"></i> @Localizer["savebtn"]
                    </button>
                </div>
            </div>
        </form>


        <div id="template_row" class="row" style="display:none">
            <div class="col-md-3 col-sm-12">
                <div class="row addTitle titleType">
                    <div class="form-group">
                        <div class="titleMobile" style="display:none">@Localizer["type"] :</div>
                        <div class="wapper-input">
                            @Html.DropDownListFor(
                                model => Model.Type,
                                 new SelectListItem[]{
                                     new SelectListItem() {Value=string.Empty, Text=string.Empty},
                            new SelectListItem() {Value="1", Text=@Localizer["type_tank"].Value},
                            new SelectListItem() {Value="2", Text=@Localizer["type_seigiku"].Value},
                                 }, new { @class = "select-classic form-control" })
                        </div>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => Model.Type, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3 col-sm-12">
                <div class="row addTitle">
                    <div class="form-group">
                        <div class="titleMobile" style="display:none">@Localizer["temp_min"] :</div>
                        <div class="input-group">
                            @Html.TextBoxFor(model => Model.TempMin, new { @class = "inputnumber form-control", @placeholder = "0", @style = "text-align:right", @aria_describedby = "basic-addon2" })
                            <span class="input-group-text" id="basic-addon2" style="background-color: transparent;">°C</span>
                        </div>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => Model.TempMin, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3 col-sm-12">
                <div class="row addTitle">
                    <div class="form-group">
                        <div class="titleMobile" style="display:none">@Localizer["temp_max"] :</div>
                        <div class="input-group">
                            @Html.TextBoxFor(model => Model.TempMax, new { @class = "inputnumber form-control", @placeholder = "0", @style = "text-align:right", @aria_describedby = "basic-addon2" })
                            <span class="input-group-text" id="basic-addon2" style="background-color: transparent;">°C</span>
                        </div>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => Model.TempMax, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3 col-sm-12">
                <div class="form-group btndelete">
                    <div class="reggisterButton">
                        <button type="button" class="btn btn-danger btn-sub" onclick="RemoveRow(this)"><i class="bi bi-trash"></i></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<input id="is_edit_flg" type="hidden" />
<input id="main_page_url" type="hidden" value="@Url.Action("Index", "S09001")" />
<input id="resource_type_tank" type="hidden" value="@Localizer["type_tank"].Value" />
<input id="resource_type_seigiku" type="hidden" value="@Localizer["type_seigiku"].Value" />


<script src="@Url.Content(string.Format("~/Content/dev/js/{0}", Utils.GetMinifiedFileName("S09001.js")))" type="text/javascript"></script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

